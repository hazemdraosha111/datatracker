openapi: 3.0.3
info:
    title: Datatracker RPC API
    description: Datatracker RPC API
    version: 1.0.0
servers:
    -   url: 'http://localhost:8000/api/rpc/'
paths:
    /person/{personId}:
        get:
            operationId: get_person_by_id
            summary: Find person by ID
            description: Returns a single person
            parameters:
                - name: personId
                  in: path
                  description: ID of person to return
                  required: true
                  schema:
                      type: integer
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Person'

    /persons/:
        post:
            operationId: get_persons
            summary: Get a batch of persons
            description: returns an array of persons 
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: integer
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    persons:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/Person'

                
    /person/create_demo_person/:
        post:
            operationId: create_demo_person
            summary: Build a datatraker Person for RPC demo purposes
            description: returns a datatracker User id for a person created with the given name
            requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        name:
                          type: string
            responses:
              '201':
                  description: OK
                  content:
                      application/json:
                        schema:
                          type: object
                          properties:
                            user_id:
                              type: integer
                            person_pk:
                              type: integer

    /doc/submitted_to_rpc:
        get:
            operationId: submitted_to_rpc
            summary: List documents ready to enter the RFC Editor Queue
            description: List documents ready to enter the RFC Editor Queue
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SubmittedToQueue'

#    /subject/person{subjectId}:
#        get:
#            operationId: get_subject_person_by_id
#            summary: Find person for a subject by ID
#            description: Returns a single person
#            parameters:
#                -   name: subjectId
#                    in: path
#                    description: subject ID of person to return
#                    required: true
#                    schema:
#                        type: string
#            responses:
#                '200':
#                    description: OK
#                    content:
#                        application/json:
#                            schema:
#                                $ref: '#/components/schemas/Person'

components: 
    schemas: 
        Person:
            type: object
            properties:
                id:
                    type: integer
                    example: 1234
                plain_name:
                    type: string
                    example: John Doe

        SubmittedToQueue:
            type: object
            properties:
                submitted_to_rpc:
                    type: array
                    items:
                        type: object
                        properties:
                            name: 
                              type: string
                            pk: 
                              type: integer
                            stream: 
                              type: string
                            submitted: 
                                type: string
                                format: date


    securitySchemes: 
        ApiKeyAuth:
            type: apiKey
            in: header
            name: X-API-KEY

security:
    - ApiKeyAuth: []
